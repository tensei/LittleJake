// <auto-generated />
using LittleSteve.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace LittleSteve.Data.Migrations
{
    [DbContext(typeof(JakeBotContext))]
    [Migration("20180224203501_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("LittleSteve.Data.Entities.GuildOwner", b =>
                {
                    b.Property<long>("DiscordId");

                    b.Property<long>("GuildId");

                    b.Property<long>("TwitterUserId");

                    b.HasKey("DiscordId", "GuildId");

                    b.HasIndex("TwitterUserId");

                    b.ToTable("GuildOwners");
                });

            modelBuilder.Entity("LittleSteve.Data.Entities.TwitterAlert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("DiscordChannelId");

                    b.Property<long>("TwitterUserId");

                    b.HasKey("Id");

                    b.HasIndex("TwitterUserId");

                    b.ToTable("TwitterAlerts");
                });

            modelBuilder.Entity("LittleSteve.Data.Entities.TwitterUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("LastTweetId");

                    b.Property<string>("Name");

                    b.Property<string>("ScreenName");

                    b.HasKey("Id");

                    b.HasIndex("LastTweetId");

                    b.ToTable("TwitterUsers");
                });

            modelBuilder.Entity("LittleSteve.Data.Entities.GuildOwner", b =>
                {
                    b.HasOne("LittleSteve.Data.Entities.TwitterUser", "TwitterUser")
                        .WithMany("GuildOwners")
                        .HasForeignKey("TwitterUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LittleSteve.Data.Entities.TwitterAlert", b =>
                {
                    b.HasOne("LittleSteve.Data.Entities.TwitterUser", "User")
                        .WithMany("TwitterAlerts")
                        .HasForeignKey("TwitterUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
